/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { AccountId } from "../models/AccountId";
import type { BeginUploadRequestV2 } from "../models/BeginUploadRequestV2";
import type { BeginUploadResponseV2 } from "../models/BeginUploadResponseV2";
import type { CompleteUploadPartRequest } from "../models/CompleteUploadPartRequest";
import type { UploadId } from "../models/UploadId";
import type { UploadPartIndex } from "../models/UploadPartIndex";
import type { UploadPartV2 } from "../models/UploadPartV2";
import { request as __request } from "../core/request";
import { ApiResult } from "../core/ApiResult";
import { Config } from "../core/OpenAPI";

const accounts = "/v2/accounts/";
const uploads = "/uploads";
const parts = "/parts/";

export async function beginMultipartUpload(
  config: Config,
  accountId: AccountId,
  requestBody: BeginUploadRequestV2
): Promise<ApiResult<BeginUploadResponseV2>> {
  return await __request<BeginUploadResponseV2>(config, {
    method: "POST",
    path: `${accounts}${accountId}${uploads}`,
    body: requestBody
  });
}

/**
 * Finalizes an upload part for an in-progress multipart upload. Required API key type: 'secret_*' or 'public_*'.
 * @param accountId
 * @param uploadId
 * @param uploadPartIndex
 * @param requestBody
 * @returns void
 * @throws ApiError
 */
export async function completeUploadPart(
  config: Config,
  accountId: AccountId,
  uploadId: UploadId,
  uploadPartIndex: UploadPartIndex,
  requestBody: CompleteUploadPartRequest
): Promise<ApiResult<void>> {
  return await __request<void>(config, {
    method: "PUT",
    path: `${accounts}${accountId}${uploads}/${uploadId}${parts}${uploadPartIndex}`,
    body: requestBody
  });
}

/**
 * Gets a remaining upload part for an in-progress upload. Required API key type: 'secret_*' or 'public_*'.
 * @param accountId
 * @param uploadId
 * @param uploadPartIndex
 * @returns UploadPartV2 Success.
 * @throws ApiError
 */
export async function getUploadPart(
  config: Config,
  accountId: AccountId,
  uploadId: UploadId,
  uploadPartIndex: UploadPartIndex
): Promise<ApiResult<UploadPartV2>> {
  return await __request<UploadPartV2>(config, {
    method: "GET",
    path: `${accounts}${accountId}${uploads}/${uploadId}${parts}${uploadPartIndex}`
  });
}
